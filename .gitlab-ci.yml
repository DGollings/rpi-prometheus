image: docker:git
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay

.docker_gitlab: &docker_gitlab
  before_script:
    - docker login -u gitlab-ci-token -p "$CI_BUILD_TOKEN" "$CI_REGISTRY"

.docker_hub: &docker_hub
  before_script:
    - docker login -u $DOCKER_USER -p $DOCKER_PASS index.docker.io

build:gitlab:
  <<: *docker_gitlab
  stage: build
  script:
    - docker build -t "$CI_REGISTRY_IMAGE:latest" 1.8
    - docker push "$CI_REGISTRY_IMAGE:latest"
    - docker build -t "$CI_REGISTRY_IMAGE:latest" 2.0
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - master

build:hub:
  <<: *docker_hub
  stage: build
  script:
    - docker build -t "$CI_REGISTRY_IMAGE:latest" 1.8
    - docker push "$CI_REGISTRY_IMAGE:latest"
    - docker build -t "$CI_REGISTRY_IMAGE:latest" 2.0
    - docker push "$CI_REGISTRY_IMAGE:latest"
  only:
    - master

deploy:gitlab:
  <<: *docker_gitlab
  stage: deploy
  script:
    - export VERSION=$(grep ' VERSION' 1.8/Dockerfile|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker build -t "$CI_REGISTRY_IMAGE:v${VERSION}" 1.8
    - docker push "$CI_REGISTRY_IMAGE:v${VERSION}"
    - export VERSION=$(grep ' VERSION' 2.0/Dockerfile|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker build -t "$CI_REGISTRY_IMAGE:v${VERSION}" 2.0
    - docker push "$CI_REGISTRY_IMAGE:v${VERSION}"
  only:
    - tags

deploy:hub:
  <<: *docker_hub
  stage: deploy
  script:
    - export VERSION=$(grep ' VERSION' 1.8/Dockerfile|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker build -t "$CI_REGISTRY_IMAGE:v${VERSION}" 1.8
    - docker push "$CI_REGISTRY_IMAGE:v${VERSION}"
    - export VERSION=$(grep ' VERSION' 2.0/Dockerfile|awk -F" " '{ print $3 }')
    - echo ${VERSION}
    - docker build -t "$CI_REGISTRY_IMAGE:v${VERSION}" 2.0
    - docker push "$CI_REGISTRY_IMAGE:v${VERSION}"
  only:
